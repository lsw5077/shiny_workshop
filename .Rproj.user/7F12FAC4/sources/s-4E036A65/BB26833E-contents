#Modified from https://rstudio.github.io/leaflet/shiny.html
#Some useful explanation about leaflet: https://rstudio.github.io/leaflet/popups.html

# Load libraries

rm(list=ls())
library(shiny)
library(leaflet)
library(maps)

# Make a list of colors for us to use
r_colors <- rgb(t(col2rgb(colors()) / 255))
names(r_colors) <- colors()

# define user interface using fluid page

ui <- fluidPage(
  
  # display object "mymap" from leafletOutput 
  
  leafletOutput("mymap"),
  
  # html tag to make a new paragraph
  p(),
  
  # Define a numeric input, where numbers are typed/clicked up and down.
  
  numericInput("pop.thresh", # call it pop.thresh for the computer
               label='Minimum Population size', # label it "minimum population size" for the user
               value = "3000000", # start the default value at 3000000
               width = NULL)
)

# Define the server, operations that happen on the computer side

server <- function(input, output, session) {

  # input=list()
  # input$pop.thresh=3000000
  
  # build an output object using renderLeaflet({}) a reactive object!
  
  output$mymap <- renderLeaflet({
    
    # make cond, a reactive value based on user input
    # filter world pop to only those cities with population larger than
    # the user's input in the numeric input
    
    cond=world.cities$pop>input$pop.thresh
    
    # define the spatial points data from the corresponding cities.
    
    points <- world.cities[cond,]; dim(points)

    # make a leaflet map using the stamen tonerlite provider

    leaflet() %>%
      addProviderTiles(providers$Stamen.TonerLite,
                       options = providerTileOptions(noWrap = TRUE)
      ) %>%
      addMarkers(lng=points$long,lat=points$lat,
                 label=points$name) # add our user-specified points 
  })
}

# run the app!

shinyApp(ui, server)