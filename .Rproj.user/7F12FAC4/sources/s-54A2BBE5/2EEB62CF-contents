---
title: "Do things once: some shiny best practices"
output: distill::distill_article
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = FALSE)
```

Our ruling strategy for engineering shiny app code will be "do things once." Designing our apps to limit the number and types of opperations they perform will help us create fast code that conserves precious hosting time and creates an engaging user experience.

Our Shiny-specific best practices flow naturally from our basic R best practices. As we discussed in our first best practices tutorial, we will endeavor to make code and outputs that are concise, well-documented, and widely accessible. 

# Organization and workflow

Just as we considered the conceptual and visual arrangement of our code in the basic R best practices tutorial, we will now consider the conceptual and visual arrangement of the components of our shiny app. One of the best things we can do for ourselves and any future readers or users of our code is to develop a stable workflow and a robust organizational framework. Creating a defined home for source data, custom functions, images and videos, and our actual app code will help us create effective and appealing apps. 

## Functions

As we discussed in the functions section of our R best practices, whenever we have to do something more than once in a script or app, we should write a function to limit repetition in our code. In shiny apps, we often find ourselves needing to write several custom functions. The best way to deal with this eventuality is to place all of our functions in their own functions.R script inside the app directory and then source it in our app.  

## Data prep

Preparing our data ahead of time will save us code, processing time, and headaches. 

# Compartmentalization

- Organization
  - Function
  - Modules
  - Packages

- Do things once
- Compartmentalize for debugging
- Accessibility: tool tips, appropriate colors, no pictures of text
- Efficiency: prep data ahead of time
- citations



The other element of accessibility we're going to deal with is screen-reader and magnifier compatibility. Screen readers are programs used by blind and visually impaired computer users to translate text into audio. That means we need to give the screen reader something to read. Some quick screen reader tips include

- No pictures of text or equations. Even if it takes more time, write it out.
- Include descriptive text whenever possible. Alt text, captions, tool tips. Use it the way you write comments in your own code.
- Also: no pictures of code!


_________________________________________________________________________________________________
Article by Lyndsie Wszola