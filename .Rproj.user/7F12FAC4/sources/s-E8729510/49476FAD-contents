# Crane game functions

library(tidyverse)

roll_climate <- function(nrolls) {
  
  roll <- data.frame(roll = seq(1, 6, 1),
                     migratory = c("Drought", "Drought",
                                   "Adequate", "Adequate",
                                   "Excellent", "Excellent"),
                     breeding = c("Adequate", "Drought",
                                  "Adequate", "Drought",
                                  "Adequate", "Drought")) %>%
          sample_n(nrolls, replace = TRUE)
  
  return(roll)

}


# Utility values:

## 6 outcomes

## Best outcome gets a 1
## worst outcome gets a 0
## Remaining four outcomes get rated between 0-1

outcomes <- data.frame(scenario = c(rep("Liberal harvest (3-6%)", 3),
                        rep("No harvest", 3)),
                       result = rep(c("Population exceeds goal",
                                      "Population within goal",
                                      "Population below goal"), 2),
                       opinion = NA)


# SWAG: Scientific wild-ass guess
## Best guess of the probability of a given outcome
## given a certain decision, pop status, and climate scenario
## Central decision: to harvest or not to harvest
## Probabilities must add to 1


scenarios <- data.frame(scenario = c("A", "B", "C"),
                        current_population = c(700000, 200000, 350000),
                        migratory_landscape = c("Normal", "Normal", 
                                                paste("Changing.  Corn prices drop.",  
                                                "Farmers enroll land in conservation",
                                                "programs or plant crop ground to",
                                                "pasture.  Major food source (corn)",
                                                "disappears from the migratory route.")),
                        special_message = c("", "disease strikes migrating cranes in previous years!", ""))


# Calculate utility value: 
## Multiply each probability by the matching utility value
## Sum up product to get weighted utility value for each option
## Largest weighted utility function is the one the group chooses

# vector of probabilities multiplied by vector of preferences = vector of utilities

data.frame(preference = c(1, 0.5, 0.5, 0, 0, 0),
           probability = c(0.4, 0.2, 0.1, 0.1, 0.1, 0.1)) %>%
  mutate(utility = preference*probability)

# Team completes 3 different decisions, then they write an individual reflection

# Climate guru rolls dice to determine climate situation
# Crane biologist selects management scenario
# facilitator helps group determine probability of each outcome 
# occuring under each management scenario (liberal harvest or no harvest)


# Side panel:
## rank outcomes
## select scenario
## Roll climate
## make p-matrix/educated guesses




points <- world.cities %>%
  filter(pop >= input$pop.thresh) %>%
  filter(case_when(input$capital == "Yes" ~ capital == 1,
                   input$capital == "No" ~ !is.na(pop))) %>%
  filter(case_when(input$country == "All" ~ !is.na(pop),
                   input$country != "All" & length(input$country > 0) ~
                    country.etc %in% input$country,
                   is.null(input$country) ~ pop < 1))
